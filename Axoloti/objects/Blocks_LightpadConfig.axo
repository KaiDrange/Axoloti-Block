<objdefs appVersion="1.0.12">
   <obj.normal id="Blocks_LightpadConfig" uuid="74f2b1a2-f8f1-4216-8800-638d9d2da0f9">
      <sDescription>Sends CCs to configure a Roli Lightpad Block running a corresponding Littlefoot script. A CC#60 received on channel 1 from USB Host resends current settings.</sDescription>
      <author>Kai Drange</author>
      <license>BSD</license>
      <inlets>
         <bool32.risingfalling name="MPE" description="MPE mode on"/>
         <int32.positive name="SingleChannelNo" description="Midi channel for non-MPE mode"/>
         <int32.positive name="GridSize" description="Grid size 1 to 5"/>
         <int32.positive name="Number" description="Number to display on lightpad"/>
         <bool32.rising name="DisplayNumber"/>
      </inlets>
      <outlets/>
      <displays>
         <bool32 name="mpe"/>
         <int32.label name="grid"/>
      </displays>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[//out
int ccChannel = 70;
int ccDisplayNumber = 71;
int ccGridSize = 72;
//in
int ccSettingsRequest = 60;

bool prevMPEState = false;
bool prevDisplayNumber = false;
int prevChannel = 1;
int prevGridSize = 1;
bool initialStateSent = false;]]></code.declaration>
      <code.krate><![CDATA[if (!initialStateSent) {
	prevMPEState = inlet_MPE ? false : true;
	prevChannel = inlet_SingleChannelNo - 1;
	prevGridSize = inlet_GridSize - 1;
	initialStateSent = true;
}
else {
	if (inlet_MPE && !prevMPEState) {
		disp_mpe = true;
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccChannel, 0);
	}
	else if (!inlet_MPE && prevMPEState) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccChannel, inlet_SingleChannelNo);
		disp_mpe = false;
	}
	else if (inlet_SingleChannelNo != prevChannel) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccChannel, inlet_SingleChannelNo);
		disp_mpe = false;
	}
	
	if (inlet_GridSize != prevGridSize) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccGridSize, inlet_GridSize);
	  	disp_grid = inlet_GridSize;
	}

	if (inlet_DisplayNumber != prevDisplayNumber) {
		MidiSend3(MIDI_DEVICE_USB_HOST, 1, 11 << 4, ccDisplayNumber, inlet_Number);
	}
	
	prevMPEState = inlet_MPE ? true : false;
	prevDisplayNumber = inlet_DisplayNumber ? true : false;
	prevGridSize = inlet_GridSize;
	prevChannel = inlet_SingleChannelNo;
}]]></code.krate>
      <code.midihandler><![CDATA[if (dev == MIDI_DEVICE_USB_HOST && port == 1) {
	if (status == 0 + MIDI_CONTROL_CHANGE && data1 == ccSettingsRequest && data2 > 0) {
		initialStateSent = false;
	}
}]]></code.midihandler>
   </obj.normal>
</objdefs>